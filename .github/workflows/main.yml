on: [push]

jobs:
  split_evaluator_test:
    runs-on: ubuntu-latest
    name: A job to test the Split evaluator github action
    steps:
      - name: Evaluate action step
        id: evaluator
        uses: splitio/split-evaluator-action@v1.0-rc5
        with:
          api-key: ${{ secrets.SPLIT_API_KEY }}
          key: ${{ secrets.SPLIT_EVAL_KEY }}
          feature-flags: |
            enable_paywall
            api_verbose

      # Use the output from the `evaluator` step
      - name: Get the output evaluation
        run: echo "The result was ${{ steps.evaluator.outputs.result }}"
      # Use the env vars from the `evaluator` step
      - name: Get the env vars from evaluation
        run: echo "The env enable_paywall  ${{ env.enable_paywall }}"
      
      # Use the env vars from the `evaluator` step to run or not this step
      - name: Run only when treatment ON
        if: ${{ env.enable_paywall == 'on' }}
        run: echo "The evaluation was ON"

      # Use the env vars from the `evaluator` step to run or not this step
      - name: Run only when treatment OFF
        if: ${{ env.enable_paywall == 'off' }}
        run: echo "The evaluation was OFF"
      
      # Use the env vars from the `evaluator` step to run or not this step
      - name: Run only when API Verbose is legacy
        if: ${{ env.api_verbose == 'legacy' }}
        run: echo "Calling API Verbose legacy"

      # Use the env vars from the `evaluator` step to run or not this step
      - name: Run only when API Verbose is V2
        if: ${{ env.api_verbose == 'v2' }}
        run: echo "Calling API Verbose V2"

    outputs:
      evaluator_treatments: ${{ steps.evaluator.outputs.result }}

  conditional_job:
    needs: split_evaluator_test
    runs-on: ubuntu-latest
    if: ${{ fromJson(needs.split_evaluator_test.outputs.evaluator_treatments).enable_paywall == 'on' }}
    steps:
      - name: First step of conditional job
        run: echo "Running conditional JOB!"

  another_job:
    needs: [split_evaluator_test, conditional_job]
    runs-on: ubuntu-latest
    steps:
      - run: echo 'FROM split_evaluator_test enable_paywall is ${{ fromJson(needs.split_evaluator_test.outputs.evaluator_treatments).enable_paywall }}'
      - run: echo 'FROM split_evaluator_test api_verbose is ${{ fromJson(needs.split_evaluator_test.outputs.evaluator_treatments).api_verbose }}'
      # Use the env vars from the `evaluator` step to run or not this step
      - name: Run only when treatment ON
        if: ${{ fromJson(needs.split_evaluator_test.outputs.evaluator_treatments).enable_paywall == 'on' }}
        run: echo ">>>> The evaluation was ON"

      # Use the env vars from the `evaluator` step to run or not this step
      - name: Run only when treatment OFF
        if: ${{ fromJson(needs.split_evaluator_test.outputs.evaluator_treatments).enable_paywall == 'off' }}
        run: echo ">>>> The evaluation was OFF"

